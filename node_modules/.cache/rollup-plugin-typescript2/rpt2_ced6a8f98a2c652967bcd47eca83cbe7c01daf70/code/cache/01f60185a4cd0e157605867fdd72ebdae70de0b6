{"code":"export default class RoomExtention extends Room {\n    run() {\n        if (this.controller && this.controller.my) {\n            //if my room then work\n            this.work();\n        }\n        else {\n            //this.runOtherRoom();\n        }\n    }\n    work() {\n        //Init Memory\n        if (!this.memory.isInit) {\n            this.memory.sourcesId = this.find(FIND_SOURCES).map(source => source.id);\n            this.memory.spawnsId = this.find(FIND_MY_SPAWNS).map(spawn => spawn.id);\n            //Init BotStat\n            this.memory.roomConfig = {\n                BotsStat: {\n                    harvester: [],\n                    upgrader: [],\n                    builder: [],\n                    claimer: [],\n                    soldier: [],\n                }\n            };\n        }\n        //Run Spawn\n        this.memory.spawnsId.forEach(spawnId => {\n            const spawn = Game.getObjectById(spawnId);\n            //Assign CreepConfig according to the current role\n            if (spawn) {\n                if (!spawn.spawning) {\n                    const creepMemory = this.getBestScreepMemory();\n                    console.log(\"a\" + creepMemory);\n                    if (creepMemory) {\n                        spawn.run(creepMemory);\n                    }\n                }\n            }\n        });\n        //Run Creeps\n        this.find(FIND_MY_CREEPS).forEach(creep => {\n            if (creep)\n                creep.run();\n        });\n    }\n    //get the best screep to spawn according to room Memory\n    getBestScreepMemory() {\n        if (!this.memory.roomConfig)\n            return undefined;\n        //harvester\n        if (this.memory.roomConfig.BotsStat.harvester.length < this.memory.sourcesId.length) {\n            //get the first not used source by iter all harvesters\n            let sourceId = this.memory.sourcesId.find(sourceId => {\n                return !this.memory.roomConfig.BotsStat.harvester.some(creepName => {\n                    return Game.creeps[creepName].memory.data.sourceId == sourceId;\n                });\n            });\n            if (!sourceId)\n                return undefined;\n            return {\n                role: 'harvester',\n                data: {\n                    sourceId: sourceId\n                },\n                isPrepareStage: false,\n                isSourceStage: false,\n                isTargetStage: false,\n            };\n        }\n    }\n}\n//# sourceMappingURL=roomExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/spawn/spawnExtention.ts"],"map":"{\"version\":3,\"file\":\"roomExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/extention/roomExtention.ts\"],\"names\":[],\"mappings\":\"AAGA,MAAM,CAAC,OAAO,OAAO,aAAc,SAAQ,IAAI;IACpC,GAAG;QACN,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YACvC,sBAAsB;YACtB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;aACI;YACD,sBAAsB;SACzB;IACL,CAAC;IAEM,IAAI;QACP,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACxE,cAAc;YACd,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG;gBACrB,QAAQ,EAAE;oBACN,SAAS,EAAE,EAAE;oBACb,QAAQ,EAAE,EAAE;oBACZ,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;iBACd;aACJ,CAAA;SACJ;QACD,WAAW;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAmB,CAAC;YAC5D,kDAAkD;YAClD,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC;oBAC/B,IAAI,WAAW,EAAE;wBACb,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;qBAC1B;iBACJ;aAEJ;QACL,CAAC,CACA,CAAC;QACF,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtC,IAAI,KAAK;gBAAE,KAAK,CAAC,GAAG,EAAE,CAAC;QAC3B,CAAC,CACA,CAAC;IACN,CAAC;IACD,uDAAuD;IAChD,mBAAmB;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU;YAAE,OAAO,SAAS,CAAC;QAC9C,WAAW;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;YACjF,sDAAsD;YACtD,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACjD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;gBACnE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ;gBAAE,OAAO,SAAS,CAAC;YAChC,OAAO;gBACH,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE;oBACF,QAAQ,EAAE,QAAQ;iBACrB;gBACD,cAAc,EAAE,KAAK;gBACrB,aAAa,EAAE,KAAK;gBACpB,aAAa,EAAE,KAAK;aAEvB,CAAA;SAEJ;IAEL,CAAC;CAEJ\"}"}
