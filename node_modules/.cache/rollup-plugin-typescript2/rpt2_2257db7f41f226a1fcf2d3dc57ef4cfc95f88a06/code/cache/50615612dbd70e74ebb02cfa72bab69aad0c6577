{"code":"export default class RoomExtention extends Room {\n    run() {\n        if (this.controller && this.controller.my) {\n            //if my room then work\n            this.work();\n        }\n        else {\n            //this.runOtherRoom();\n        }\n    }\n    work() {\n        //Init Memory\n        if (!this.memory.isInit) {\n            this.initMemory();\n        }\n        //Count Screeps every 100 ticks to avoid mistake\n        if (Game.time % 100 == 0) {\n            this.countScreeps();\n        }\n        //Run Spawn\n        this.memory.spawnsId.forEach(spawnId => {\n            const spawn = Game.getObjectById(spawnId);\n            //Assign CreepConfig according to the current role\n            if (spawn && spawn.my) {\n                spawn.run();\n            }\n        });\n        //Run Creeps\n        this.find(FIND_MY_CREEPS).forEach(creep => {\n            if (creep)\n                creep.run();\n        });\n    }\n    initMemory() {\n        this.countScreeps();\n        this.initSourceMemory();\n        this.memory.spawnsId = this.find(FIND_MY_SPAWNS).map(spawn => spawn.id);\n        //Init BotStat\n        this.memory.roomConfig = {\n            BotsStat: {\n                harvester: [],\n                upgrader: [],\n                builder: [],\n                claimer: [],\n                soldier: [],\n            }\n        };\n        this.memory.isInit = true;\n    }\n    //Count the number of screeps of each role in the room\n    countScreeps() {\n        this.memory.roomConfig.BotsStat.harvester.length = 0;\n        this.memory.roomConfig.BotsStat.upgrader.length = 0;\n        this.memory.roomConfig.BotsStat.builder.length = 0;\n        this.memory.roomConfig.BotsStat.claimer.length = 0;\n        this.memory.roomConfig.BotsStat.soldier.length = 0;\n        this.find(FIND_MY_CREEPS).forEach(creep => {\n            var _a;\n            if (creep) {\n                (_a = this.memory.roomConfig.BotsStat[creep.memory.role]) === null || _a === void 0 ? void 0 : _a.push(creep.name);\n            }\n        });\n        //print the number of screeps of each role in the room\n        console.log(\"harvester: \" + this.memory.roomConfig.BotsStat.harvester.length);\n        console.log(\"upgrader: \" + this.memory.roomConfig.BotsStat.upgrader.length);\n        console.log(\"builder: \" + this.memory.roomConfig.BotsStat.builder.length);\n        console.log(\"claimer: \" + this.memory.roomConfig.BotsStat.claimer.length);\n        console.log(\"soldier: \" + this.memory.roomConfig.BotsStat.soldier.length);\n    }\n    initSourceMemory() {\n        this.memory.sources = {};\n        this.find(FIND_SOURCES).forEach(source => {\n            if (source) {\n                this.memory.sources[source.id] = [];\n            }\n        });\n        //add harvesters to sources memory\n        this.memory.roomConfig.BotsStat.harvester.forEach(creepName => {\n            const creep = Game.creeps[creepName];\n            if (creep) {\n                const sourceId = creep.memory.data.sourceId;\n                if (sourceId) {\n                    this.memory.sources[sourceId].push(creepName);\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=roomExtention.js.map","references":["E:/Github/ScreepsKiller/src/spawn/spawnExtention.ts"],"map":"{\"version\":3,\"file\":\"roomExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/extention/roomExtention.ts\"],\"names\":[],\"mappings\":\"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\"}"}
