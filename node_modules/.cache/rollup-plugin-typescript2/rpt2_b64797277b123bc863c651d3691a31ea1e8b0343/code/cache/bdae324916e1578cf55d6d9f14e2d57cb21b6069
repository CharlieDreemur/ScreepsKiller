{"code":"//Calculate the number of harvester needed according to the number of source\nexport function CalculateNeedHarvester(room, bodys) {\n    const sources_num = room.memory.sources.length;\n    //get the work parts of the body\n    const work_parts = bodys.filter(body => body == WORK).length;\n    //4 work parts = 1 source\n    //floor is needed to avoid float\n    const harevster_one_source = Math.floor(1 / work_parts * 4);\n    if (harevster_one_source > 2)\n        return harevster_one_source * sources_num;\n}\n//# sourceMappingURL=utils.js.map","references":[],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/spawn/utils.ts\"],\"names\":[],\"mappings\":\"AACA,4EAA4E;AAC5E,MAAM,UAAU,sBAAsB,CAAC,IAAU,EAAE,KAAwB;IACvE,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;IAC/C,gCAAgC;IAChC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC;IAC7D,yBAAyB;IACzB,gCAAgC;IAChC,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,UAAU,GAAE,CAAC,CAAC,CAAC;IACzD,IAAG,oBAAoB,GAAC,CAAC;QACzB,OAAO,oBAAoB,GAAG,WAAW,CAAC;AAC9C,CAAC\"}"}
