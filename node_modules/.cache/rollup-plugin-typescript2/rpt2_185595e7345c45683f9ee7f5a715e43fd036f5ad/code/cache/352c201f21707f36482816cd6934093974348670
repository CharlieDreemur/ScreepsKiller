{"code":"import { GetRandomCreepName } from \"../utils\";\nimport { CalculateNeedHarvester } from \"./utils\";\nimport roleBodys from \"../extention/bodyPart\";\nclass SpawnExtention extends Spawn {\n    run() {\n        if (this.spawning)\n            return;\n        /*\n        if(this.store.getUsedCapacity<RESOURCE_ENERGY>()< SpawnExtention.LEAST_ENERGY_TO_SPAWN) {\n            console.log(\"Not enough energy to spawn\"+this.store.getCapacity());\n            return;\n        }\n        */\n        const creepMemory = SpawnExtention.getBestScreepMemory(this.room);\n        console.log(\"CreepMemory: \" + creepMemory);\n        if (creepMemory) {\n            this.work(creepMemory);\n        }\n        else {\n            //no need to spawn now\n        }\n    }\n    work(memory) {\n        let name = GetRandomCreepName(memory.role);\n        let body = roleBodys[memory.role];\n        if (!body)\n            return ERR_INVALID_ARGS;\n        this.room.memory.roomConfig.BotsStat[memory.role].push(name);\n        return super.spawnCreep(body, name, { memory: memory });\n    }\n    //get the best screep to spawn according to room Memory, return undefined if no need to spawn\n    static getBestScreepMemory(room) {\n        if (!room.memory.roomConfig)\n            return undefined;\n        //console.log(\"harvester: \" + room.memory.roomConfig.BotsStat.harvester.length+\" \"+CalculateNeedHarvester(room, roleBodys.harvester));\n        //harvester\n        if (room.memory.roomConfig.BotsStat.harvester.length < CalculateNeedHarvester(room, roleBodys.harvester)) {\n            //get the least used source\n            let sourceId = room.memory.sourcesId[0];\n            console.log(\"sourceId: \" + sourceId);\n            if (sourceId) {\n                return {\n                    role: 'harvester',\n                    data: {\n                        sourceId: sourceId,\n                        targetId: undefined,\n                    },\n                    isPrepareStage: false,\n                    working: false,\n                };\n            }\n        }\n        if (room.memory.roomConfig.BotsStat.upgrader.length < 2) {\n            return {\n                role: 'upgrader',\n                data: {\n                    sourceId: undefined,\n                    targetId: undefined,\n                },\n                isPrepareStage: false,\n                working: false,\n            };\n        }\n        if (room.memory.roomConfig.BotsStat.builder.length < 2) {\n            return {\n                role: 'builder',\n                data: {\n                    sourceId: undefined,\n                    targetId: undefined,\n                },\n                isPrepareStage: false,\n                working: false,\n            };\n        }\n        return undefined;\n    }\n}\n//Define a const value\nSpawnExtention.LEAST_ENERGY_TO_SPAWN = 300;\nexport default SpawnExtention;\n//# sourceMappingURL=spawnExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/role/base.ts","D:/StudyLife/Github/ScreepsKiller/src/utils.ts","D:/StudyLife/Github/ScreepsKiller/src/spawn/utils.ts","D:/StudyLife/Github/ScreepsKiller/src/extention/bodyPart.ts"],"map":"{\"version\":3,\"file\":\"spawnExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/spawn/spawnExtention.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAC,sBAAsB,EAAC,MAAM,SAAS,CAAC;AAC/C,OAAO,SAAS,MAAM,uBAAuB,CAAC;AAC9C,MAAqB,cAAe,SAAQ,KAAK;IAGtC,GAAG;QACN,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC1B;;;;;UAKE;QACF,MAAM,WAAW,GAAG,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC;QAC3C,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1B;aACI;YACD,sBAAsB;SACzB;IAEL,CAAC;IACM,IAAI,CAAC,MAAmB;QAC3B,IAAI,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI;YAAE,OAAO,gBAAgB,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,6FAA6F;IACtF,MAAM,CAAC,mBAAmB,CAAC,IAAU;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU;YAAE,OAAO,SAAS,CAAC;QAC9C,sIAAsI;QACtI,WAAW;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,sBAAsB,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,EAAE;YACtG,2BAA2B;YAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;YACrC,IAAI,QAAQ,EAAE;gBACV,OAAO;oBACH,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE;wBACF,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,SAAS;qBACtB;oBACD,cAAc,EAAE,KAAK;oBACrB,OAAO,EAAE,KAAK;iBACjB,CAAA;aACJ;SACJ;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,OAAO;gBACH,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE;oBACF,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,SAAS;iBACtB;gBACD,cAAc,EAAE,KAAK;gBACrB,OAAO,EAAE,KAAK;aACjB,CAAA;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpD,OAAO;gBACH,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE;oBACF,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,SAAS;iBACtB;gBACD,cAAc,EAAE,KAAK;gBACrB,OAAO,EAAE,KAAK;aACjB,CAAA;SACJ;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;;AA1ED,sBAAsB;AACC,oCAAqB,GAAG,GAAG,CAAC;eAFlC,cAAc\"}"}
