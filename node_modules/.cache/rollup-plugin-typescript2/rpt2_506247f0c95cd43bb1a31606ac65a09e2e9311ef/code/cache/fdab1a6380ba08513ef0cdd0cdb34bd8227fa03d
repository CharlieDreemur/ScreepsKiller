{"code":"const roles = {\n    harvester: (data) => \n}({\n    prepare: creep => {\n        if (!data.sourceId) {\n            console.log(\"HarvesterConfig.sourceId is undefined\");\n            return false;\n        }\n        let source;\n        if (creep.memory.data.sourceId)\n            source = Game.getObjectById(creep.memory.data.sourceId);\n        else\n            source = Game.getObjectById(data.sourceId);\n        if (source && creep.harvest(source) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(source);\n            return false;\n        }\n        //arrive at source\n        return true;\n    },\n    source: creep => {\n        if (!data.sourceId) {\n            console.log(\"HarvesterConfig.sourceId is undefined\");\n            return false;\n        }\n        let source;\n        source = Game.getObjectById(data.sourceId);\n        if (!source) {\n            console.log(\"HarvesterConfig.sourceId is undefined\");\n            return false;\n        }\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(source);\n            return false;\n        }\n        if (creep.store.getFreeCapacity() > 0)\n            return false;\n        //Harvest complete and start to go to targetContainer\n        return true;\n    },\n    target: creep => {\n        //For now, let assume target is the closest container/spawn\n        let target;\n        if (creep.memory.data.targetId) {\n            target = Game.getObjectById(creep.memory.data.targetId);\n            //if target is full, get another container\n            if ((target === null || target === void 0 ? void 0 : target.store.getFreeCapacity()) == 0) {\n                //get another container that is not full\n                target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\n                    filter: (structure) => {\n                        return (structure.structureType == STRUCTURE_CONTAINER || structure.structureType == STRUCTURE_STORAGE || structure.structureType == STRUCTURE_SPAWN) &&\n                            structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\n                    }\n                });\n                creep.memory.data.targetId = target === null || target === void 0 ? void 0 : target.id;\n            }\n        }\n        else {\n            //get closest container\n            target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\n                filter: (structure) => {\n                    return (structure.structureType == STRUCTURE_CONTAINER || structure.structureType == STRUCTURE_STORAGE || structure.structureType == STRUCTURE_SPAWN) &&\n                        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\n                }\n            });\n            creep.memory.data.targetId = target === null || target === void 0 ? void 0 : target.id;\n        }\n        if (!target) {\n            console.log(\"HarvesterConfig.targetId is undefined\");\n            //All structures are full, direclty continue to the next stage\n            return true;\n        }\n        if (creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(target);\n            return false;\n        }\n        //arrive at target\n        return true;\n    },\n}), upgrader, ICreepStatus;\n({\n    prepare: creep => {\n        return true;\n    },\n    source: creep => {\n        //get closest container\n        let source;\n        //if (creep.memory.data.sourceId) source = Game.getObjectById<StructureContainer>(creep.memory.data.sourceId)\n        source = creep.pos.findClosestByPath(FIND_STRUCTURES, {\n            filter: (structure) => {\n                return (structure.structureType == STRUCTURE_CONTAINER || structure.structureType == STRUCTURE_STORAGE || structure.structureType == STRUCTURE_SPAWN) &&\n                    structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\n            }\n        });\n        if (!source) {\n            console.log(\"UpgraderConfig.sourceId is undefined\");\n            return false;\n        }\n        if (creep.withdraw(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(source);\n        }\n        if (creep.store.getFreeCapacity() > 0)\n            return false;\n        return true;\n    },\n    target: creep => {\n        //get controller\n        let target;\n        //if (creep.memory.data.targetId) target = Game.getObjectById<StructureController>(creep.memory.data.targetId)\n        target = creep.room.controller;\n        if (!target) {\n            console.log(\"UpgraderConfig.targetId is undefined\");\n            return false;\n        }\n        if (creep.upgradeController(target) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(target);\n        }\n        if (creep.store.getUsedCapacity() > 0)\n            return false;\n        //user up all source and start to get source again\n        return true;\n    },\n}),\n    builder;\n(data) => ({\n    prepare: creep => {\n        return true;\n    },\n    source: creep => {\n        //get closest container\n        let source;\n        //if (creep.memory.data.sourceId) source = Game.getObjectById<StructureContainer>(creep.memory.data.sourceId)\n        source = creep.pos.findClosestByPath(FIND_STRUCTURES, {\n            filter: (structure) => {\n                return (structure.structureType == STRUCTURE_CONTAINER || structure.structureType == STRUCTURE_STORAGE || structure.structureType == STRUCTURE_SPAWN) &&\n                    structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\n            }\n        });\n        if (!source) {\n            console.log(\"BuilderConfig.sourceId is undefined\");\n            return false;\n        }\n        if (creep.withdraw(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(source);\n        }\n        return true;\n    },\n    target: creep => {\n        //get cloest construction site\n        let target;\n        if (creep.memory.data.targetId)\n            target = Game.getObjectById(creep.memory.data.targetId);\n        target = creep.pos.findClosestByPath(FIND_MY_CONSTRUCTION_SITES);\n        if (!target) {\n            console.log(\"BuilderConfig.targetId is undefined\");\n            return false;\n        }\n        if (creep.build(target) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(target);\n        }\n        return true;\n    },\n}),\n    claimer;\n(data) => ({\n    prepare: creep => {\n        return true;\n    },\n    source: creep => {\n        return true;\n    },\n    target: creep => {\n        return true;\n    },\n}),\n    soldier;\n(data) => ({\n    prepare: creep => {\n        return true;\n    },\n    source: creep => {\n        return true;\n    },\n    target: creep => {\n        return true;\n    },\n}),\n;\nexport default roles;\n//# sourceMappingURL=base.js.map","references":[],"map":"{\"version\":3,\"file\":\"base.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/role/base.ts\"],\"names\":[],\"mappings\":\"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\"}"}
