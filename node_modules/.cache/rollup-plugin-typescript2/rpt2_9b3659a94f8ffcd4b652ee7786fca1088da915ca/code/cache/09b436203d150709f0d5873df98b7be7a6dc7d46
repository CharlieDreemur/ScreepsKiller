{"code":"//Create a creep name based on the role and the current time\nexport const GetRandomCreepName = function (role) {\n    return role + Game.time;\n};\n/**\n * 把 obj2 的原型合并到 obj1 的原型上\n * 如果原型的键以 Getter 结尾，则将会把其挂载为 getter 属性\n * @param obj1 要挂载到的对象\n * @param obj2 要进行挂载的对象\n */\nexport const assignPrototype = function (obj1, obj2) {\n    Object.getOwnPropertyNames(obj2.prototype).forEach(key => {\n        if (key.includes('Getter')) {\n            Object.defineProperty(obj1.prototype, key.split('Getter')[0], {\n                get: obj2.prototype[key],\n                enumerable: false,\n                configurable: true\n            });\n        }\n        else\n            obj1.prototype[key] = obj2.prototype[key];\n    });\n};\n/**\n * 生成 pixel\n *\n * @param cpuLimit 当 bucket 中的 cpu 到多少时才生成 pixel\n */\nexport function generatePixel(cpuLimit = 7000) {\n    if (Game.cpu.bucket >= cpuLimit)\n        Game.cpu.generatePixel();\n}\n//# sourceMappingURL=utils.js.map","references":[],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/utils.ts\"],\"names\":[],\"mappings\":\"AAAA,4DAA4D;AAC5D,MAAM,CAAC,MAAM,kBAAkB,GAAG,UAAU,IAAU;IAClD,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,CAAC,CAAA;AACD;;;;;GAKG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,UAAU,IAA4B,EAAE,IAA4B;IAC/F,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACrD,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACxB,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1D,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;gBACxB,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;aACrB,CAAC,CAAA;SACL;;YACI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAED;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,WAAmB,IAAI;IACjD,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ;QAAE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAA;AAC7D,CAAC\"}"}
