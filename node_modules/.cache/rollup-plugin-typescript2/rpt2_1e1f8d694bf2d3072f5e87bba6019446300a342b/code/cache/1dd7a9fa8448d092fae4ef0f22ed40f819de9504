{"code":"import roles from \"../role/base\";\nexport default class CreepExtension extends Creep {\n    constructor() {\n        super(...arguments);\n        this.deleteSelfFromRoomMemory = () => {\n            if (this.memory.role) {\n                const index = this.room.memory.roomConfig.BotsStat[this.memory.role].indexOf(this.name);\n                if (index != -1) {\n                    this.room.memory.roomConfig.BotsStat[this.memory.role].splice(index, 1);\n                }\n            }\n        };\n    }\n    run() {\n        if (this.spawning) {\n            console.log(\"spawning\");\n            return;\n        }\n        if (this.ticksToLive && this.ticksToLive <= 2) {\n            this.deleteSelfFromRoomMemory();\n        }\n        const creepConfig = roles[this.memory.role](this.memory.data);\n        if (!creepConfig) {\n            console.log(\"creepConfig is undefined\");\n            return;\n        }\n        if (!this.memory.isPrepareStage) {\n            if (creepConfig.prepare)\n                this.memory.isPrepareStage = creepConfig.prepare(this);\n            // return true directly if no prepare function\n            else\n                this.memory.isPrepareStage = true;\n        }\n        if (!this.memory.isSourceStage) {\n            if (creepConfig.source)\n                this.memory.isSourceStage = creepConfig.source(this);\n            // return true directly if no source function\n            else\n                this.memory.isSourceStage = true;\n        }\n        if (!this.memory.isTargetStage) {\n            if (creepConfig.target)\n                this.memory.isTargetStage = creepConfig.target(this);\n            // return true directly if no target function\n            else\n                this.memory.isTargetStage = true;\n        }\n    }\n}\n//# sourceMappingURL=creepExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/role/base.ts"],"map":"{\"version\":3,\"file\":\"creepExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/extention/creepExtention.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,cAAc,CAAC;AAEjC,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,KAAK;IAAjD;;QA+BW,6BAAwB,GAAG,GAAS,EAAE;YACzC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAClB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxF,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;oBACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAC3E;aACJ;QACL,CAAC,CAAA;IACL,CAAC;IAtCU,GAAG;QACN,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,OAAO;SACV;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YAC3C,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC;QACD,MAAM,WAAW,GAAiB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;YAC7B,IAAI,WAAW,CAAC,OAAO;gBAAE,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAC/E,8CAA8C;;gBACzC,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;SAC1C;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC5B,IAAI,WAAW,CAAC,MAAM;gBAAE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;YAC5E,6CAA6C;;gBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;SACzC;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC5B,IAAI,WAAW,CAAC,MAAM;gBAAE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;YAC5E,6CAA6C;;gBACxC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;SACzC;IACL,CAAC;CAUJ\"}"}
