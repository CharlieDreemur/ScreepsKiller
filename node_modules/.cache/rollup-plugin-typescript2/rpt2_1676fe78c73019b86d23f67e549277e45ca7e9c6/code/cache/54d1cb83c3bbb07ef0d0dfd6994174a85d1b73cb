{"code":"import roles from \"../role/base\";\nimport { GetRandomCreepName } from \"../utils\";\nclass SpawnExtention extends Spawn {\n    run() {\n        if (this.spawning)\n            return;\n        if (this.store.getFreeCapacity() < SpawnExtention.LEAST_ENERGY_TO_SPAWN)\n            return;\n        const creepMemory = SpawnExtention.getBestScreepMemory(this.room);\n        //console.log(\"CreepMemory: \" + creepMemory);\n        if (creepMemory) {\n            this.work(creepMemory);\n        }\n    }\n    work(memory) {\n        let name = GetRandomCreepName(memory.role);\n        let body = roles[memory.role](memory.data).bodys;\n        if (!body)\n            return ERR_INVALID_ARGS;\n        this.room.memory.roomConfig.BotsStat[memory.role].push(name);\n        return super.spawnCreep(body, name, { memory: memory });\n    }\n    //get the best screep to spawn according to room Memory\n    static getBestScreepMemory(room) {\n        if (!room.memory.roomConfig)\n            return undefined;\n        //harvester\n        if (room.memory.roomConfig.BotsStat.harvester.length < room.memory.sourcesId.length) {\n            //get the first not used source by iter all harvesters\n            let sourceId = room.memory.sourcesId.find(sourceId => {\n                return !room.memory.roomConfig.BotsStat.harvester.some(creepName => {\n                    return Game.creeps[creepName].memory.data.sourceId == sourceId;\n                });\n            });\n            if (!sourceId)\n                return undefined;\n            return {\n                role: 'harvester',\n                data: {\n                    sourceId: sourceId\n                },\n                isPrepareStage: false,\n                isSourceStage: false,\n                isTargetStage: false,\n            };\n        }\n    }\n}\n//Define a const value\nSpawnExtention.LEAST_ENERGY_TO_SPAWN = 300;\nexport default SpawnExtention;\n//# sourceMappingURL=spawnExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/role/base.ts","D:/StudyLife/Github/ScreepsKiller/src/utils.ts"],"map":"{\"version\":3,\"file\":\"spawnExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/spawn/spawnExtention.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,cAAc,CAAC;AACjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,MAAqB,cAAe,SAAQ,KAAK;IAGtC,GAAG;QACN,IAAG,IAAI,CAAC,QAAQ;YAAE,OAAO;QACzB,IAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAmB,GAAE,cAAc,CAAC,qBAAqB;YAAE,OAAO;QAC/F,MAAM,WAAW,GAAG,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,6CAA6C;QAC7C,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1B;IAEL,CAAC;IACM,IAAI,CAAC,MAAmB;QAC3B,IAAI,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,IAAI;YAAE,OAAO,gBAAgB,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,uDAAuD;IAChD,MAAM,CAAC,mBAAmB,CAAC,IAAU;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU;YAAE,OAAO,SAAS,CAAC;QAC9C,WAAW;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;YACjF,sDAAsD;YACtD,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACjD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;gBACnE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ;gBAAE,OAAO,SAAS,CAAC;YAChC,OAAO;gBACH,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE;oBACF,QAAQ,EAAE,QAAQ;iBACrB;gBACD,cAAc,EAAE,KAAK;gBACrB,aAAa,EAAE,KAAK;gBACpB,aAAa,EAAE,KAAK;aAEvB,CAAA;SAEJ;IAEL,CAAC;;AA9CD,sBAAsB;AACC,oCAAqB,GAAG,GAAG,CAAC;eAFlC,cAAc\"}"}
