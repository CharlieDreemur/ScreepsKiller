{"code":"import roles from \"../role/base\";\nexport default class CreepExtension extends Creep {\n    run() {\n        if (this.spawning) {\n            console.log(\"spawning\");\n            return;\n        }\n        if (this.ticksToLive && this.ticksToLive <= 2) {\n            this.deleteSelfFromRoomMemory();\n        }\n        if (typeof roles[this.memory.role] != 'function') {\n            console.log(\"roles[\" + this.memory.role + \"] is not a function\");\n            return;\n        }\n        const creepConfig = roles[this.memory.role](this.memory.data);\n        if (!creepConfig) {\n            console.log(\"creepConfig\" + this.memory.role + \" \" + this.id + \"is undefined\");\n            return;\n        }\n        if (!this.memory.isPrepareStage) {\n            if (creepConfig.prepare)\n                this.memory.isPrepareStage = creepConfig.prepare(this);\n            // return true directly if no prepare function\n            else\n                this.memory.isPrepareStage = true;\n        }\n        //if not prepare after execute prepare, return, wait for next tick\n        if (!this.memory.isPrepareStage)\n            return;\n        const working = creepConfig.source ? this.memory.working : true;\n        let stateChange = false;\n        if (working) {\n            if (creepConfig.target && creepConfig.target(this))\n                stateChange = true;\n        }\n        else {\n            if (creepConfig.source && creepConfig.source(this))\n                stateChange = true;\n        }\n        if (stateChange) {\n            this.memory.working = !this.memory.working;\n        }\n    }\n    deleteSelfFromRoomMemory() {\n        if (this.memory.role) {\n            const index = this.room.memory.roomConfig.BotsStat[this.memory.role].indexOf(this.name);\n            if (index != -1) {\n                this.room.memory.roomConfig.BotsStat[this.memory.role].splice(index, 1);\n            }\n            if (this.memory.role == 'harvester') {\n                let source;\n                if (this.memory.data.sourceId)\n                    source = Game.getObjectById(this.memory.data.sourceId);\n                else\n                    return;\n                if (source) {\n                    //get this harvest id index in the source[source.id]\n                    const index = this.room.memory.sources[source.id].indexOf(this.name);\n                    if (index != -1) {\n                        this.room.memory.sources[source.id].splice(index, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=creepExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/role/base.ts"],"map":"{\"version\":3,\"file\":\"creepExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/extention/creepExtention.ts\"],\"names\":[],\"mappings\":\"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\"}"}
