{"code":"export default class RoomExtention extends Room {\n    run() {\n        if (this.controller && this.controller.my) {\n            //if my room then work\n            this.work();\n        }\n        else {\n            //this.runOtherRoom();\n        }\n    }\n    work() {\n        //Init Memory\n        if (!this.memory.isInit) {\n            this.initMemory();\n        }\n        //Count Screeps every 300 ticks to avoid mistake\n        if (Game.time % 300 == 0) {\n            this.countScreeps();\n        }\n        //Run Spawn\n        this.memory.spawnsId.forEach(spawnId => {\n            const spawn = Game.getObjectById(spawnId);\n            //Assign CreepConfig according to the current role\n            if (spawn && spawn.my) {\n                spawn.run();\n            }\n        });\n        //Run Creeps\n        this.find(FIND_MY_CREEPS).forEach(creep => {\n            if (creep)\n                creep.run();\n        });\n    }\n    initMemory() {\n        this.memory.sources = new Map();\n        this.find(FIND_SOURCES).forEach(source => {\n            this.memory.spawnsId = this.find(FIND_MY_SPAWNS).map(spawn => spawn.id);\n            //Init BotStat\n            this.memory.roomConfig = {\n                BotsStat: {\n                    harvester: [],\n                    upgrader: [],\n                    builder: [],\n                    claimer: [],\n                    soldier: [],\n                }\n            };\n            this.countScreeps();\n            this.memory.isInit = true;\n        }\n        //Count the number of screeps of each role in the room\n        , \n        //Count the number of screeps of each role in the room\n        public, countScreeps(), void {\n            this: .memory.roomConfig.BotsStat.harvester.length = 0,\n            this: .memory.roomConfig.BotsStat.upgrader.length = 0,\n            this: .memory.roomConfig.BotsStat.builder.length = 0,\n            this: .memory.roomConfig.BotsStat.claimer.length = 0,\n            this: .memory.roomConfig.BotsStat.soldier.length = 0,\n            this: .find(FIND_MY_CREEPS).forEach(creep => {\n                if (creep) {\n                    this.memory.roomConfig.BotsStat[creep.memory.role].push(creep.name);\n                }\n            }),\n            //print the number of screeps of each role in the room\n            console, : .log(\"harvester: \" + this.memory.roomConfig.BotsStat.harvester.length),\n            console, : .log(\"upgrader: \" + this.memory.roomConfig.BotsStat.upgrader.length),\n            console, : .log(\"builder: \" + this.memory.roomConfig.BotsStat.builder.length),\n            console, : .log(\"claimer: \" + this.memory.roomConfig.BotsStat.claimer.length),\n            console, : .log(\"soldier: \" + this.memory.roomConfig.BotsStat.soldier.length)\n        });\n    }\n}\n//# sourceMappingURL=roomExtention.js.map","references":["D:/StudyLife/Github/ScreepsKiller/src/spawn/spawnExtention.ts"],"map":"{\"version\":3,\"file\":\"roomExtention.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/extention/roomExtention.ts\"],\"names\":[],\"mappings\":\"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\"}"}
